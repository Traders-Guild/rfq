initSidebarItems({"enum":[["Instrument","Types"],["Order",""],["ProtocolError","Error handling"],["Side",""],["Venue",""]],"fn":[["check_id","Confirms that a given pubkey is equivalent to the program ID"],["confirm_access_control",""],["entry","The Anchor codegen exposes a programming model where a user defines a set of methods inside of a `#[program]` module in a way similar to writing RPC request handlers. The macro then generates a bunch of code wrapping these user defined methods into something that can be executed on Solana."],["entrypoint","Safety"],["id","Returns the program ID"],["respond_access_control",""],["return_collateral_access_control",""],["settle_access_control","Access controls"]],"mod":[["accounts","An Anchor generated module, providing a set of structs mirroring the structs deriving `Accounts`, where each field is a `Pubkey`. This is useful for specifying accounts for a client."],["instruction","An Anchor generated module containing the programâ€™s set of instructions, where each method handler in the `#[program]` mod is associated with a struct defining the input arguments to the method. These should be used directly, when one wants to serialize Anchor instruction data, for example, when speciying instructions on a client."],["program","Module representing the program."],["rfq",""]],"static":[["ID","The static program ID"]],"struct":[["Confirm",""],["Initialize","Contexts"],["LastLook",""],["Leg",""],["OrderState","Market maker order state"],["ProtocolState","Global state for the entire RFQ system"],["Request",""],["Respond",""],["ReturnCollateral",""],["RfqState","State Holds state of one RFQ"],["Settle",""]]});