initSidebarItems({"constant":[["ASSET_ESCROW_SEED","Asset escrow PDA seed"],["ORDER_SEED","Order PDA seed"],["PROTOCOL_SEED","Protocol PDA seed"],["QUOTE_ESCROW_SEED","Quote PDA seed"],["RFQ_SEED","RFQ PDA seed"]],"enum":[["Instrument","RFQ instrument type."],["Order","Order."],["ProtocolError","Error handling codes."],["Side","Side for RFQ."],["Venue","Venue for RFQ leg."]],"fn":[["check_id","Confirms that a given pubkey is equivalent to the program ID"],["confirm_access_control","Confirmation access control. Ensures confirmation is:"],["entry","The Anchor codegen exposes a programming model where a user defines a set of methods inside of a `#[program]` module in a way similar to writing RPC request handlers. The macro then generates a bunch of code wrapping these user defined methods into something that can be executed on Solana."],["entrypoint","Safety"],["id","Returns the program ID"],["last_look_access_control","Last look access control. Ensures last look:"],["respond_access_control","Response access control. Ensures response satisfies the following conditions:"],["return_collateral_access_control","Return collateral access control. Ensures returning collateral for RFQ that is:"],["settle_access_control","Settlement access control. Ensures RFQ is:"]],"mod":[["accounts","An Anchor generated module, providing a set of structs mirroring the structs deriving `Accounts`, where each field is a `Pubkey`. This is useful for specifying accounts for a client."],["instruction","An Anchor generated module containing the programâ€™s set of instructions, where each method handler in the `#[program]` mod is associated with a struct defining the input arguments to the method. These should be used directly, when one wants to serialize Anchor instruction data, for example, when speciying instructions on a client."],["program","Module representing the program."],["rfq","Request for quote module."]],"static":[["ID","The static program ID"]],"struct":[["Confirm","Confirms RFQ response."],["Initialize","Intializes protocol."],["LastLook","Last look for RFQ."],["Leg","RFQ implementation."],["OrderState","Market maker order state"],["ProtocolState","Global state for the entire RFQ system"],["Request","Requests quote (RFQ)."],["Respond","Responds to quote."],["ReturnCollateral","Returns collateral."],["RfqState","Holds state of a single RFQ."],["Settle","Settles RFQ."]]});